version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: airflow-postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"  # Porta externa para o PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network  # Adicionando rede compartilhada

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile  # Dockerfile personalizado para instalar dependências
    container_name: airflow-webserver
    depends_on:
      - postgres
    ports:
      - "8080:8080"  # Porta para acessar o Airflow Webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - app_network  # Adicionando rede compartilhada
    entrypoint: >
      /bin/bash -c "
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com;
      exec airflow webserver
      "

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile  # Dockerfile personalizado para instalar dependências
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    networks:
      - app_network  # Adicionando rede compartilhada
    entrypoint: >
      /bin/bash -c "
      exec airflow scheduler
      "

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge


